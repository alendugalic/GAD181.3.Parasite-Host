//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Scripts/InputActions/PlayersInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayersInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayersInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayersInputActions"",
    ""maps"": [
        {
            ""name"": ""Player-Host"",
            ""id"": ""0aaa0caa-a236-444e-ac87-45d447e5ebf4"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""10ef3e98-6156-4600-bb11-34bc611b8564"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""0f63c4a9-f393-4d57-a8f2-97b5ce9a7b3f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""c4dba8b8-f087-4199-a8e7-12549c7e0e92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyAttack"",
                    ""type"": ""Button"",
                    ""id"": ""8ab122d2-5079-4f70-bc65-288fbebcd16e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Block"",
                    ""type"": ""Button"",
                    ""id"": ""2df5e1f8-7362-4b21-aac5-bdf696c72636"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AreaBlock"",
                    ""type"": ""Button"",
                    ""id"": ""4ca45a11-18e7-4113-bf2e-9d7143adf50f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TargetLock"",
                    ""type"": ""Button"",
                    ""id"": ""f210670b-3fb7-404a-aab4-4c64f8e25d9f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Eat"",
                    ""type"": ""Button"",
                    ""id"": ""3c02a4aa-0a4f-4e09-b2da-6d5ad1e10fe7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SuperJump"",
                    ""type"": ""Button"",
                    ""id"": ""2d4ad5a6-38c3-4007-9bdb-ff4f49eaff3b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""31c67684-a96e-4139-adb4-7baecb79ef16"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d3025ee6-4232-427a-864b-27d0e8b1db24"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""52190b08-377e-44d3-9cbb-a890e062eecd"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d42e9ca9-3aff-4188-a028-7c8b54060beb"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c164a050-5e06-456c-a9e8-81b1c1863b5b"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": ""Hold(pressPoint=0.01)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Block"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""51ffa070-017a-498c-ba39-9df6bc17983a"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AreaBlock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ac7906b-3f09-4ca7-8d34-fc1123395cbd"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TargetLock"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81b2a07e-7bce-4c5f-8b68-1fa0a053656b"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Eat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3cc46f4d-6d4e-4440-85e0-fc869446c996"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SuperJump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9c92cd3-4c28-44c5-8fcb-a23fb0beb8cc"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b575ad25-2df0-415f-b708-13698a99a38c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac7067f6-b592-44b8-bcb4-e7d2cfe28ab9"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9bdbf1e1-78f1-4e6a-9717-38a177224f6e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a14bd82d-1f0e-40f2-98a3-e48f2f4f38c2"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e31b96b5-3236-4889-a300-6b2e9e967e82"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0e07934c-4d33-4762-8a54-10f8b93e1710"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""10615144-8941-45fd-a072-66902bc1c8e8"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d3b5b974-edd7-4b84-a475-c55c893c1662"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""998e6fdb-0e7e-4e85-bf50-421b5990d934"",
            ""actions"": [
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""a4088015-a937-4937-9ded-1aaa54c61e18"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""975fda35-43bf-421f-bc7b-8e3ccd25bc92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""dff8017c-19f8-4f16-ac99-f85ae6c0cbd4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b2d8a9d3-cedf-4503-a39b-6eaa014ea04f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ec0675bc-42f3-40a2-b514-e6aa4801b82d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TrackedDevicePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""dcf81514-27c3-4327-8084-88440ffc05ed"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TrackedDeviceOrientation"",
                    ""type"": ""PassThrough"",
                    ""id"": ""4c10a8e3-65a1-429c-b2e5-b9ff48a66fdc"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3101a4f5-bb11-4962-b380-c4a93a89642f"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20a6b27a-164c-426b-9fc1-1be497309b2d"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""504cf305-e4be-48a5-a362-08a6cf3ee7d4"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83ea2ac6-93f9-4b67-a3a3-2bedb1a078cb"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c366435a-e5b0-4be2-ae8d-06874a7a1eb3"",
                    ""path"": ""<VirtualMouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86de8227-50cb-440a-8f9c-68ff38c03d99"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ec8ca2f-20d4-4f1a-9db6-290c1a84af0d"",
                    ""path"": ""<VirtualMouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f4df48bd-88b5-4cc8-bfee-5077628b7f4d"",
                    ""path"": ""<XRController>/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDevicePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8c26f14-feaa-40a6-81f2-bdb0f33e3534"",
                    ""path"": ""<XRController>/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TrackedDeviceOrientation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player-Parasite"",
            ""id"": ""c71c78d8-2f0c-4469-b05a-b65e2165da2d"",
            ""actions"": [
                {
                    ""name"": ""LookParasite"",
                    ""type"": ""Button"",
                    ""id"": ""3ebbec2f-763f-4c63-9bad-80acdb963f6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveInstructions"",
                    ""type"": ""PassThrough"",
                    ""id"": ""043e8bd1-b19a-4e23-965c-12ea9c7ce1e6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MapSave"",
                    ""type"": ""Button"",
                    ""id"": ""52a020be-829e-4a86-9c03-478855698ddd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TargetMark"",
                    ""type"": ""Button"",
                    ""id"": ""84db465b-8dbd-46f5-a082-29e2f3bc6349"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SlowDown"",
                    ""type"": ""Button"",
                    ""id"": ""b7ca5d89-8360-4a28-80c0-f59dadee191e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""b8b2b96a-21d5-493c-a5dd-f1ff092a8744"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeVisionF"",
                    ""type"": ""Button"",
                    ""id"": ""130fabbe-d258-43a4-84c9-b064a8681cf2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeVisionB"",
                    ""type"": ""Button"",
                    ""id"": ""caf0538d-c106-44f0-bc5a-ad5a0ce06a9a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MarkerOne"",
                    ""type"": ""Button"",
                    ""id"": ""1a2d93b2-f028-4c0a-868c-f661a23ccb4f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MarkerTwo"",
                    ""type"": ""Button"",
                    ""id"": ""59e7badd-6811-46a1-8a97-76c7ab3dc610"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7597f6aa-ec8e-4104-8a80-aebf34f21e54"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LookParasite"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62034e9c-4122-4a4b-85fa-e7e6b85cb11b"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MapSave"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e58b431b-af40-46cc-93fb-f2d610f01bca"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TargetMark"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""37543d3a-4242-41b0-b584-36d810eeeee0"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SlowDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab5d4656-fb48-4d25-b7e6-ea647c81b01e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad8b8714-4cda-455c-9fe9-62caaf857f62"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeVisionF"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70731979-ca51-4e2c-b570-8cc151646126"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeVisionB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2c2ef79-67b0-46c2-9bfc-df85fcd78af6"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MarkerOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c15543a2-40a7-4762-8833-e3f57e8a1cb4"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MarkerTwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""a0f818a2-1d5e-48f9-af55-42b9a8796007"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveInstructions"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2b049ab6-2b58-46a1-9660-373a7ffb8079"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveInstructions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""21704431-9a46-41d1-8e5f-c679c18680fb"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveInstructions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8047f395-9090-49b5-ad2c-183b1b18691d"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveInstructions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3e6ad6a5-e8b3-461e-917f-ae7721224ec8"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveInstructions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player-Host
        m_PlayerHost = asset.FindActionMap("Player-Host", throwIfNotFound: true);
        m_PlayerHost_Move = m_PlayerHost.FindAction("Move", throwIfNotFound: true);
        m_PlayerHost_Look = m_PlayerHost.FindAction("Look", throwIfNotFound: true);
        m_PlayerHost_Attack = m_PlayerHost.FindAction("Attack", throwIfNotFound: true);
        m_PlayerHost_HeavyAttack = m_PlayerHost.FindAction("HeavyAttack", throwIfNotFound: true);
        m_PlayerHost_Block = m_PlayerHost.FindAction("Block", throwIfNotFound: true);
        m_PlayerHost_AreaBlock = m_PlayerHost.FindAction("AreaBlock", throwIfNotFound: true);
        m_PlayerHost_TargetLock = m_PlayerHost.FindAction("TargetLock", throwIfNotFound: true);
        m_PlayerHost_Eat = m_PlayerHost.FindAction("Eat", throwIfNotFound: true);
        m_PlayerHost_SuperJump = m_PlayerHost.FindAction("SuperJump", throwIfNotFound: true);
        m_PlayerHost_Jump = m_PlayerHost.FindAction("Jump", throwIfNotFound: true);
        m_PlayerHost_Sprint = m_PlayerHost.FindAction("Sprint", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Pause = m_UI.FindAction("Pause", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
        m_UI_Point = m_UI.FindAction("Point", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
        m_UI_TrackedDevicePosition = m_UI.FindAction("TrackedDevicePosition", throwIfNotFound: true);
        m_UI_TrackedDeviceOrientation = m_UI.FindAction("TrackedDeviceOrientation", throwIfNotFound: true);
        // Player-Parasite
        m_PlayerParasite = asset.FindActionMap("Player-Parasite", throwIfNotFound: true);
        m_PlayerParasite_LookParasite = m_PlayerParasite.FindAction("LookParasite", throwIfNotFound: true);
        m_PlayerParasite_MoveInstructions = m_PlayerParasite.FindAction("MoveInstructions", throwIfNotFound: true);
        m_PlayerParasite_MapSave = m_PlayerParasite.FindAction("MapSave", throwIfNotFound: true);
        m_PlayerParasite_TargetMark = m_PlayerParasite.FindAction("TargetMark", throwIfNotFound: true);
        m_PlayerParasite_SlowDown = m_PlayerParasite.FindAction("SlowDown", throwIfNotFound: true);
        m_PlayerParasite_Run = m_PlayerParasite.FindAction("Run", throwIfNotFound: true);
        m_PlayerParasite_ChangeVisionF = m_PlayerParasite.FindAction("ChangeVisionF", throwIfNotFound: true);
        m_PlayerParasite_ChangeVisionB = m_PlayerParasite.FindAction("ChangeVisionB", throwIfNotFound: true);
        m_PlayerParasite_MarkerOne = m_PlayerParasite.FindAction("MarkerOne", throwIfNotFound: true);
        m_PlayerParasite_MarkerTwo = m_PlayerParasite.FindAction("MarkerTwo", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player-Host
    private readonly InputActionMap m_PlayerHost;
    private List<IPlayerHostActions> m_PlayerHostActionsCallbackInterfaces = new List<IPlayerHostActions>();
    private readonly InputAction m_PlayerHost_Move;
    private readonly InputAction m_PlayerHost_Look;
    private readonly InputAction m_PlayerHost_Attack;
    private readonly InputAction m_PlayerHost_HeavyAttack;
    private readonly InputAction m_PlayerHost_Block;
    private readonly InputAction m_PlayerHost_AreaBlock;
    private readonly InputAction m_PlayerHost_TargetLock;
    private readonly InputAction m_PlayerHost_Eat;
    private readonly InputAction m_PlayerHost_SuperJump;
    private readonly InputAction m_PlayerHost_Jump;
    private readonly InputAction m_PlayerHost_Sprint;
    public struct PlayerHostActions
    {
        private @PlayersInputActions m_Wrapper;
        public PlayerHostActions(@PlayersInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_PlayerHost_Move;
        public InputAction @Look => m_Wrapper.m_PlayerHost_Look;
        public InputAction @Attack => m_Wrapper.m_PlayerHost_Attack;
        public InputAction @HeavyAttack => m_Wrapper.m_PlayerHost_HeavyAttack;
        public InputAction @Block => m_Wrapper.m_PlayerHost_Block;
        public InputAction @AreaBlock => m_Wrapper.m_PlayerHost_AreaBlock;
        public InputAction @TargetLock => m_Wrapper.m_PlayerHost_TargetLock;
        public InputAction @Eat => m_Wrapper.m_PlayerHost_Eat;
        public InputAction @SuperJump => m_Wrapper.m_PlayerHost_SuperJump;
        public InputAction @Jump => m_Wrapper.m_PlayerHost_Jump;
        public InputAction @Sprint => m_Wrapper.m_PlayerHost_Sprint;
        public InputActionMap Get() { return m_Wrapper.m_PlayerHost; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerHostActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerHostActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerHostActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerHostActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Look.started += instance.OnLook;
            @Look.performed += instance.OnLook;
            @Look.canceled += instance.OnLook;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @HeavyAttack.started += instance.OnHeavyAttack;
            @HeavyAttack.performed += instance.OnHeavyAttack;
            @HeavyAttack.canceled += instance.OnHeavyAttack;
            @Block.started += instance.OnBlock;
            @Block.performed += instance.OnBlock;
            @Block.canceled += instance.OnBlock;
            @AreaBlock.started += instance.OnAreaBlock;
            @AreaBlock.performed += instance.OnAreaBlock;
            @AreaBlock.canceled += instance.OnAreaBlock;
            @TargetLock.started += instance.OnTargetLock;
            @TargetLock.performed += instance.OnTargetLock;
            @TargetLock.canceled += instance.OnTargetLock;
            @Eat.started += instance.OnEat;
            @Eat.performed += instance.OnEat;
            @Eat.canceled += instance.OnEat;
            @SuperJump.started += instance.OnSuperJump;
            @SuperJump.performed += instance.OnSuperJump;
            @SuperJump.canceled += instance.OnSuperJump;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
        }

        private void UnregisterCallbacks(IPlayerHostActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Look.started -= instance.OnLook;
            @Look.performed -= instance.OnLook;
            @Look.canceled -= instance.OnLook;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @HeavyAttack.started -= instance.OnHeavyAttack;
            @HeavyAttack.performed -= instance.OnHeavyAttack;
            @HeavyAttack.canceled -= instance.OnHeavyAttack;
            @Block.started -= instance.OnBlock;
            @Block.performed -= instance.OnBlock;
            @Block.canceled -= instance.OnBlock;
            @AreaBlock.started -= instance.OnAreaBlock;
            @AreaBlock.performed -= instance.OnAreaBlock;
            @AreaBlock.canceled -= instance.OnAreaBlock;
            @TargetLock.started -= instance.OnTargetLock;
            @TargetLock.performed -= instance.OnTargetLock;
            @TargetLock.canceled -= instance.OnTargetLock;
            @Eat.started -= instance.OnEat;
            @Eat.performed -= instance.OnEat;
            @Eat.canceled -= instance.OnEat;
            @SuperJump.started -= instance.OnSuperJump;
            @SuperJump.performed -= instance.OnSuperJump;
            @SuperJump.canceled -= instance.OnSuperJump;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
        }

        public void RemoveCallbacks(IPlayerHostActions instance)
        {
            if (m_Wrapper.m_PlayerHostActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerHostActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerHostActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerHostActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerHostActions @PlayerHost => new PlayerHostActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Pause;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Cancel;
    private readonly InputAction m_UI_Point;
    private readonly InputAction m_UI_Click;
    private readonly InputAction m_UI_TrackedDevicePosition;
    private readonly InputAction m_UI_TrackedDeviceOrientation;
    public struct UIActions
    {
        private @PlayersInputActions m_Wrapper;
        public UIActions(@PlayersInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pause => m_Wrapper.m_UI_Pause;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
        public InputAction @Point => m_Wrapper.m_UI_Point;
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputAction @TrackedDevicePosition => m_Wrapper.m_UI_TrackedDevicePosition;
        public InputAction @TrackedDeviceOrientation => m_Wrapper.m_UI_TrackedDeviceOrientation;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
            @Submit.started += instance.OnSubmit;
            @Submit.performed += instance.OnSubmit;
            @Submit.canceled += instance.OnSubmit;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @Point.started += instance.OnPoint;
            @Point.performed += instance.OnPoint;
            @Point.canceled += instance.OnPoint;
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
            @TrackedDevicePosition.started += instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.performed += instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.canceled += instance.OnTrackedDevicePosition;
            @TrackedDeviceOrientation.started += instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.performed += instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.canceled += instance.OnTrackedDeviceOrientation;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
            @Submit.started -= instance.OnSubmit;
            @Submit.performed -= instance.OnSubmit;
            @Submit.canceled -= instance.OnSubmit;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @Point.started -= instance.OnPoint;
            @Point.performed -= instance.OnPoint;
            @Point.canceled -= instance.OnPoint;
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
            @TrackedDevicePosition.started -= instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.performed -= instance.OnTrackedDevicePosition;
            @TrackedDevicePosition.canceled -= instance.OnTrackedDevicePosition;
            @TrackedDeviceOrientation.started -= instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.performed -= instance.OnTrackedDeviceOrientation;
            @TrackedDeviceOrientation.canceled -= instance.OnTrackedDeviceOrientation;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);

    // Player-Parasite
    private readonly InputActionMap m_PlayerParasite;
    private List<IPlayerParasiteActions> m_PlayerParasiteActionsCallbackInterfaces = new List<IPlayerParasiteActions>();
    private readonly InputAction m_PlayerParasite_LookParasite;
    private readonly InputAction m_PlayerParasite_MoveInstructions;
    private readonly InputAction m_PlayerParasite_MapSave;
    private readonly InputAction m_PlayerParasite_TargetMark;
    private readonly InputAction m_PlayerParasite_SlowDown;
    private readonly InputAction m_PlayerParasite_Run;
    private readonly InputAction m_PlayerParasite_ChangeVisionF;
    private readonly InputAction m_PlayerParasite_ChangeVisionB;
    private readonly InputAction m_PlayerParasite_MarkerOne;
    private readonly InputAction m_PlayerParasite_MarkerTwo;
    public struct PlayerParasiteActions
    {
        private @PlayersInputActions m_Wrapper;
        public PlayerParasiteActions(@PlayersInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @LookParasite => m_Wrapper.m_PlayerParasite_LookParasite;
        public InputAction @MoveInstructions => m_Wrapper.m_PlayerParasite_MoveInstructions;
        public InputAction @MapSave => m_Wrapper.m_PlayerParasite_MapSave;
        public InputAction @TargetMark => m_Wrapper.m_PlayerParasite_TargetMark;
        public InputAction @SlowDown => m_Wrapper.m_PlayerParasite_SlowDown;
        public InputAction @Run => m_Wrapper.m_PlayerParasite_Run;
        public InputAction @ChangeVisionF => m_Wrapper.m_PlayerParasite_ChangeVisionF;
        public InputAction @ChangeVisionB => m_Wrapper.m_PlayerParasite_ChangeVisionB;
        public InputAction @MarkerOne => m_Wrapper.m_PlayerParasite_MarkerOne;
        public InputAction @MarkerTwo => m_Wrapper.m_PlayerParasite_MarkerTwo;
        public InputActionMap Get() { return m_Wrapper.m_PlayerParasite; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerParasiteActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerParasiteActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerParasiteActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerParasiteActionsCallbackInterfaces.Add(instance);
            @LookParasite.started += instance.OnLookParasite;
            @LookParasite.performed += instance.OnLookParasite;
            @LookParasite.canceled += instance.OnLookParasite;
            @MoveInstructions.started += instance.OnMoveInstructions;
            @MoveInstructions.performed += instance.OnMoveInstructions;
            @MoveInstructions.canceled += instance.OnMoveInstructions;
            @MapSave.started += instance.OnMapSave;
            @MapSave.performed += instance.OnMapSave;
            @MapSave.canceled += instance.OnMapSave;
            @TargetMark.started += instance.OnTargetMark;
            @TargetMark.performed += instance.OnTargetMark;
            @TargetMark.canceled += instance.OnTargetMark;
            @SlowDown.started += instance.OnSlowDown;
            @SlowDown.performed += instance.OnSlowDown;
            @SlowDown.canceled += instance.OnSlowDown;
            @Run.started += instance.OnRun;
            @Run.performed += instance.OnRun;
            @Run.canceled += instance.OnRun;
            @ChangeVisionF.started += instance.OnChangeVisionF;
            @ChangeVisionF.performed += instance.OnChangeVisionF;
            @ChangeVisionF.canceled += instance.OnChangeVisionF;
            @ChangeVisionB.started += instance.OnChangeVisionB;
            @ChangeVisionB.performed += instance.OnChangeVisionB;
            @ChangeVisionB.canceled += instance.OnChangeVisionB;
            @MarkerOne.started += instance.OnMarkerOne;
            @MarkerOne.performed += instance.OnMarkerOne;
            @MarkerOne.canceled += instance.OnMarkerOne;
            @MarkerTwo.started += instance.OnMarkerTwo;
            @MarkerTwo.performed += instance.OnMarkerTwo;
            @MarkerTwo.canceled += instance.OnMarkerTwo;
        }

        private void UnregisterCallbacks(IPlayerParasiteActions instance)
        {
            @LookParasite.started -= instance.OnLookParasite;
            @LookParasite.performed -= instance.OnLookParasite;
            @LookParasite.canceled -= instance.OnLookParasite;
            @MoveInstructions.started -= instance.OnMoveInstructions;
            @MoveInstructions.performed -= instance.OnMoveInstructions;
            @MoveInstructions.canceled -= instance.OnMoveInstructions;
            @MapSave.started -= instance.OnMapSave;
            @MapSave.performed -= instance.OnMapSave;
            @MapSave.canceled -= instance.OnMapSave;
            @TargetMark.started -= instance.OnTargetMark;
            @TargetMark.performed -= instance.OnTargetMark;
            @TargetMark.canceled -= instance.OnTargetMark;
            @SlowDown.started -= instance.OnSlowDown;
            @SlowDown.performed -= instance.OnSlowDown;
            @SlowDown.canceled -= instance.OnSlowDown;
            @Run.started -= instance.OnRun;
            @Run.performed -= instance.OnRun;
            @Run.canceled -= instance.OnRun;
            @ChangeVisionF.started -= instance.OnChangeVisionF;
            @ChangeVisionF.performed -= instance.OnChangeVisionF;
            @ChangeVisionF.canceled -= instance.OnChangeVisionF;
            @ChangeVisionB.started -= instance.OnChangeVisionB;
            @ChangeVisionB.performed -= instance.OnChangeVisionB;
            @ChangeVisionB.canceled -= instance.OnChangeVisionB;
            @MarkerOne.started -= instance.OnMarkerOne;
            @MarkerOne.performed -= instance.OnMarkerOne;
            @MarkerOne.canceled -= instance.OnMarkerOne;
            @MarkerTwo.started -= instance.OnMarkerTwo;
            @MarkerTwo.performed -= instance.OnMarkerTwo;
            @MarkerTwo.canceled -= instance.OnMarkerTwo;
        }

        public void RemoveCallbacks(IPlayerParasiteActions instance)
        {
            if (m_Wrapper.m_PlayerParasiteActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerParasiteActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerParasiteActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerParasiteActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerParasiteActions @PlayerParasite => new PlayerParasiteActions(this);
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerHostActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnHeavyAttack(InputAction.CallbackContext context);
        void OnBlock(InputAction.CallbackContext context);
        void OnAreaBlock(InputAction.CallbackContext context);
        void OnTargetLock(InputAction.CallbackContext context);
        void OnEat(InputAction.CallbackContext context);
        void OnSuperJump(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnPause(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnTrackedDevicePosition(InputAction.CallbackContext context);
        void OnTrackedDeviceOrientation(InputAction.CallbackContext context);
    }
    public interface IPlayerParasiteActions
    {
        void OnLookParasite(InputAction.CallbackContext context);
        void OnMoveInstructions(InputAction.CallbackContext context);
        void OnMapSave(InputAction.CallbackContext context);
        void OnTargetMark(InputAction.CallbackContext context);
        void OnSlowDown(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnChangeVisionF(InputAction.CallbackContext context);
        void OnChangeVisionB(InputAction.CallbackContext context);
        void OnMarkerOne(InputAction.CallbackContext context);
        void OnMarkerTwo(InputAction.CallbackContext context);
    }
}
